apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-sigepa
  namespace: aplicaciones
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-sigepa
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 33%
  template:
    metadata:
      labels:
        app: frontend-sigepa
    spec:
      containers:
        - name: frontend-sigepa
          image: <HARBOR_REGISTRY>/library/frontend-sigepa:<VERSION>
          ports:
            - containerPort: 3000
          imagePullPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-sigepa
  labels:
    app: frontend-sigepa
  namespace: aplicaciones
spec:
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: frontend-sigepa

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-frontend-sigepa
  namespace: aplicaciones
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "512m"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
        - path: /frontend-sigepa
          pathType: Prefix
          backend:
            service:
              name: frontend-sigepa
              port:
                number: 3000
